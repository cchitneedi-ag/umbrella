name: Worker CI

on:
  push:
    branches:
      - main
  pull_request:


concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: Run Lint
    uses: codecov/gha-workflows/.github/workflows/lint.yml@v1.0.0

  build:
    name: Build Shared
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11","3.8.13", "3.9.12", "3.10.5"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Requirements
        id: cache-requirements
        uses: actions/cache@v3
        env:
          cache-name: cache-requirements
        with:
          path: |
            venv
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ matrix.python-version }}

      - name: Install requirements
        run: |
          make requirements.install



  codecovstartup:
    name: Codecov Startup
    needs: build
    uses: codecov/gha-workflows/.github/workflows/codecov-startup.yml@v1.0.0
    secrets: inherit

  ats:
    name: ATS
    needs: [build, codecovstartup]
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11" ]
    if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'codecov' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache Requirements
        id: cache-requirements
        uses: actions/cache@v3
        env:
          cache-name: cache-requirements
        with:
          path: |
            venv
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          make requirements.install
      - name: Run ATS
        uses: codecov/codecov-ats@v0
        env:
          CODECOV_STATIC_TOKEN: ${{ secrets.STATIC_TOKEN }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_ORG_TOKEN }}
      - name: Run Tests
        run: |
          python -m pytest --cov=./ ${{ env.CODECOV_ATS_TESTS }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4-beta
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_ORG_TOKEN }}
        with:
          flags: smart-labels
          plugins: pycoverage,compress-pycoverage

  test:
    name: Test
    needs: [build, codecovstartup]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11","3.8.13", "3.9.12", "3.10.5" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache Requirements
        id: cache-requirements
        uses: actions/cache@v3
        env:
          cache-name: cache-requirements
        with:
          path: |
            venv
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ matrix.python-version }}-
      - name: Run unit tests
        run: |
          make test
      ## Don't upload on forks for now.
      - name: upload using codecovcli
        if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'codecov' }}
        run: |
          make test_env.upload CODECOV_UPLOAD_TOKEN=${{ secrets.CODECOV_ORG_TOKEN }} FLAG=python${{ matrix.python-version }}
      - name: upload using codecovcli staging
        if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'codecov' }}
        run: |
          make test_env.upload CODECOV_UPLOAD_TOKEN=${{ secrets.CODECOV_ORG_TOKEN_STAGING }} CODECOV_URL=${{ secrets.CODECOV_STAGING_URL }} FLAG=python${{ matrix.python-version }}
      - name: upload using codecovcli qa
        if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'codecov' }}
        run: |
          make test_env.upload CODECOV_UPLOAD_TOKEN=${{ secrets.CODECOV_QA_TOKEN }} CODECOV_URL=${{ secrets.CODECOV_QA_URL }} FLAG=python${{ matrix.python-version }}
      - name: upload using codecovcli public qa
        if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'codecov' }}
        run: |
          make test_env.upload CODECOV_UPLOAD_TOKEN=${{ secrets.CODECOV_PUBLIC_QA_TOKEN }} CODECOV_URL=${{ secrets.CODECOV_PUBLIC_QA_URL }} FLAG=python${{ matrix.python-version }}

  mutation:
    name: Run Mutations
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache Requirements
        id: cache-requirements
        uses: actions/cache@v3
        env:
          cache-name: cache-requirements
        with:
          path: |
            venv
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          make requirements.install
      - name: Run mutations
        run: |
          make test_env.run_mutation
  




  rust:
    name: Rust Tests
    needs: [build, codecovstartup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run rust tests
        run: |
          make test_env.rust_tests
      ## Don't upload on forks for now.
      - name: upload using codecovcli
        if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'codecov' }}
        run: |
          make test_env.upload CODECOV_UPLOAD_TOKEN=${{ secrets.CODECOV_ORG_TOKEN }} FLAG=rust
      - name: upload using codecovcli staging
        if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'codecov' }}
        run: |
          make test_env.upload CODECOV_UPLOAD_TOKEN=${{ secrets.CODECOV_ORG_TOKEN_STAGING }} CODECOV_URL=${{ secrets.CODECOV_STAGING_URL }} FLAG=rust
      - name: upload using codecovcli qa
        if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'codecov' }}
        run: |
          make test_env.upload CODECOV_UPLOAD_TOKEN=${{ secrets.CODECOV_QA_TOKEN }} CODECOV_URL=${{ secrets.CODECOV_QA_URL }} FLAG=rust
      - name: upload using codecovcli public qa
        if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'codecov' }}
        run: |
          make test_env.upload CODECOV_UPLOAD_TOKEN=${{ secrets.CODECOV_PUBLIC_QA_TOKEN }} CODECOV_URL=${{ secrets.CODECOV_PUBLIC_QA_URL }} FLAG=rust