from services.report.parser import RawReportParser


simple_content = b"""./codecov.yaml
Makefile
awesome/__init__.py
awesome/code_fib.py
dev.sh
tests/__init__.py
tests/test_number_two.py
tests/test_sample.py
unit.coverage.xml
<<<<<< network
# path=flagtwo.coverage.xml
<?xml version="1.0" ?>
<coverage branch-rate="0" branches-covered="0" branches-valid="0" complexity="0" line-rate="0.6" lines-covered="30" lines-valid="50" timestamp="1600652028856" version="4.5.4">
    <!-- Generated by coverage.py: https://coverage.readthedocs.io -->
    <!-- Based on https://raw.githubusercontent.com/cobertura/web/master/htdocs/xml/coverage-04.dtd -->
    <sources>
        <source>/Users/thiagorramos/Projects/clientenv/example-python</source>
    </sources>
    <packages>
        <package branch-rate="0" complexity="0" line-rate="0.68" name="awesome">
            <classes>
                <class branch-rate="0" complexity="0" filename="awesome/__init__.py" line-rate="0.6471" name="__init__.py">
                    <methods/>
                    <lines>
                        <line hits="1" number="1"/>
                    </lines>
                </class>
                <class branch-rate="0" complexity="0" filename="awesome/code_fib.py" line-rate="0.75" name="code_fib.py">
                    <methods/>
                    <lines>
                        <line hits="1" number="1"/>
                    </lines>
                </class>
            </classes>
        </package>
        <package branch-rate="0" complexity="0" line-rate="0.52" name="tests">
            <classes>
                <class branch-rate="0" complexity="0" filename="tests/__init__.py" line-rate="1" name="__init__.py">
                    <methods/>
                    <lines/>
                </class>
                <class branch-rate="0" complexity="0" filename="tests/test_number_two.py" line-rate="0" name="test_number_two.py">
                    <methods/>
                    <lines>
                        <line hits="0" number="1"/>
                    </lines>
                </class>
                <class branch-rate="0" complexity="0" filename="tests/test_sample.py" line-rate="1" name="test_sample.py">
                    <methods/>
                    <lines>
                        <line hits="1" number="1"/>
                    </lines>
                </class>
            </classes>
        </package>
    </packages>
</coverage>
<<<<<< EOF"""


simple_no_toc = b"""
# path=flagtwo.coverage.xml
<?xml version="1.0" ?>
<coverage branch-rate="0" branches-covered="0" branches-valid="0" complexity="0" line-rate="0.6" lines-covered="30" lines-valid="50" timestamp="1600652028856" version="4.5.4">
    <!-- Generated by coverage.py: https://coverage.readthedocs.io -->
    <!-- Based on https://raw.githubusercontent.com/cobertura/web/master/htdocs/xml/coverage-04.dtd -->
    <sources>
        <source>/Users/thiagorramos/Projects/clientenv/example-python</source>
    </sources>
    <packages>
        <package branch-rate="0" complexity="0" line-rate="0.68" name="awesome">
            <classes>
                <class branch-rate="0" complexity="0" filename="awesome/__init__.py" line-rate="0.6471" name="__init__.py">
                    <methods/>
                    <lines>
                        <line hits="1" number="1"/>
                    </lines>
                </class>
                <class branch-rate="0" complexity="0" filename="awesome/code_fib.py" line-rate="0.75" name="code_fib.py">
                    <methods/>
                    <lines>
                        <line hits="1" number="1"/>
                    </lines>
                </class>
            </classes>
        </package>
        <package branch-rate="0" complexity="0" line-rate="0.52" name="tests">
            <classes>
                <class branch-rate="0" complexity="0" filename="tests/__init__.py" line-rate="1" name="__init__.py">
                    <methods/>
                    <lines/>
                </class>
                <class branch-rate="0" complexity="0" filename="tests/test_number_two.py" line-rate="0" name="test_number_two.py">
                    <methods/>
                    <lines>
                        <line hits="0" number="1"/>
                    </lines>
                </class>
                <class branch-rate="0" complexity="0" filename="tests/test_sample.py" line-rate="1" name="test_sample.py">
                    <methods/>
                    <lines>
                        <line hits="1" number="1"/>
                    </lines>
                </class>
            </classes>
        </package>
    </packages>
</coverage>
<<<<<< EOF"""

more_complex = b"""PRODUCTION_TOKEN=testbk0a5ldblu3njjtg9kkcgv4ya9ghk77k
<<<<<< ENV
./codecov.yaml
Makefile
awesome/__init__.py
awesome/code_fib.py
dev.sh
tests/__init__.py
tests/test_number_two.py
tests/test_sample.py
unit.coverage.xml
<<<<<< network
# path=unit.coverage.xml
<?xml version="1.0" ?>
<coverage branch-rate="0" branches-covered="0" branches-valid="0" complexity="0" line-rate="0.8636" lines-covered="38" lines-valid="44" timestamp="1581335242903" version="4.5.4">
    <!-- Generated by coverage.py: https://coverage.readthedocs.io -->
    <!-- Based on https://raw.githubusercontent.com/cobertura/web/master/htdocs/xml/coverage-04.dtd -->
    <sources>
        <source>/Users/thiagorramos/Projects/clientenv/example-python</source>
    </sources>
    <packages>
        <package branch-rate="0" complexity="0" line-rate="1" name="tests">
            <classes>
                <class branch-rate="0" complexity="0" filename="tests/__init__.py" line-rate="1" name="__init__.py">
                    <methods/>
                    <lines/>
                </class>
                <class branch-rate="0" complexity="0" filename="tests/test_sample.py" line-rate="1" name="test_sample.py">
                    <methods/>
                    <lines>
                        <line hits="1" number="1"/>
                        <line hits="0" number="17"/>
                        <line hits="1" number="18"/>
                        <line hits="1" number="21"/>
                        <line hits="1" number="22"/>
                    </lines>
                </class>
            </classes>
        </package>
    </packages>
</coverage>
<<<<<< EOF
<?xml version="1.0" ?>
<coverage branch-rate="0" branches-covered="0" branches-valid="0" complexity="0" line-rate="0.56" lines-covered="28" lines-valid="50" timestamp="1600652026658" version="4.5.4">
    <!-- Generated by coverage.py: https://coverage.readthedocs.io -->
    <!-- Based on https://raw.githubusercontent.com/cobertura/web/master/htdocs/xml/coverage-04.dtd -->
    <sources>
        <source>/Users/thiagorramos/Projects/clientenv/example-python</source>
    </sources>
    <packages>
        <package branch-rate="0" complexity="0" line-rate="0.64" name="awesome">
            <classes>
                <class branch-rate="0" complexity="0" filename="awesome/__init__.py" line-rate="0.5882" name="__init__.py">
                    <methods/>
                    <lines>
                        <line hits="1" number="1"/>
                    </lines>
                </class>
                <class branch-rate="0" complexity="0" filename="awesome/code_fib.py" line-rate="0.75" name="code_fib.py">
                    <methods/>
                    <lines>
                        <line hits="1" number="1"/>
                        <line hits="0" number="10"/>
                    </lines>
                </class>
            </classes>
        </package>
    </packages>
</coverage>
<<<<<< EOF"""


class TestParser(object):
    def test_parser_with_toc(self):
        res = RawReportParser.parse_raw_report_from_bytes(simple_content)
        assert res.has_toc()
        assert not res.has_env()
        assert not res.has_path_fixes()
        assert len(res.uploaded_files) == 1

    def test_parser_no_toc(self):
        res = RawReportParser.parse_raw_report_from_bytes(simple_no_toc)
        assert not res.has_toc()
        assert not res.has_env()
        assert not res.has_path_fixes()
        assert len(res.uploaded_files) == 1

    def test_parser_more_complete(self):
        res = RawReportParser.parse_raw_report_from_bytes(more_complex)
        assert res.has_toc()
        assert res.has_env()
        assert not res.has_path_fixes()
        assert len(res.uploaded_files) == 2
        assert res.uploaded_files[0].filename == "unit.coverage.xml"
        assert res.uploaded_files[0].contents.startswith(b'<?xml version="1.0" ?>')
        assert res.uploaded_files[0].contents.endswith(b"</coverage>")
        assert res.uploaded_files[1].filename is None
