version: 2.1
executors:
  codecov-deploy:
    docker:
    - image: gcr.io/genuine-polymer-165712/codecov-deploy:latest
      user: root
      auth:
        username: _json_key
        password: $GCLOUD_SERVICE_KEY
    working_directory: /work
  codecov-api:
    docker:
    - image: gcr.io/genuine-polymer-165712/codecov-api:latest
      user: root
      auth:
        username: _json_key
        password: $GCLOUD_SERVICE_KEY
    - image: circleci/postgres:9.6.2
      name: postgres
    working_directory: /api

gcloud_auth: &gcloud_auth
  name: Copy gcloud auth for docker push
  command: |-
    echo "$GCLOUD_SERVICE_KEY" > service.json
    gcloud auth activate-service-account --key-file=service.json
    gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
    gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
    gcloud auth configure-docker

gcloud_auth_enterprise: &gcloud_auth_enterprise
  name: Copy gcloud auth for docker push
  command: |-
    echo "$GCLOUD_SERVICE_KEY" > service.json
    gcloud auth activate-service-account --key-file=service.json
    gcloud --quiet config set project ${GOOGLE_ENTERPRISE_PROJECT_ID}
    gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
    gcloud auth configure-docker

jobs:
  linter:
    docker:
      - image: circleci/python:3.7.6
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Running linter
          command: |
            echo "Installing..."
            pip3 install -Iv black==19.10b0 isort
            echo "Linting..."
            black --check .
            echo "Sorting..."
            isort --profile black --check .
  build:
    executor: codecov-deploy
    steps:
    - checkout
    - setup_remote_docker:
        version: 20.10.7
    - run:
        <<: *gcloud_auth
    - run:
        name: build container
        command: |-
          make -f Makefile.circle build-requirements
          make -f Makefile.circle build VERSION=$CIRCLE_TAG
          make -f Makefile.circle push
          make -f Makefile.circle tag
          make -f Makefile.circle save
    - persist_to_workspace:
        root: .
        paths:
          - .
  build-enterprise:
    executor: codecov-deploy
    steps:
    - checkout
    - setup_remote_docker:
        version: 20.10.7
    - run: |
        ssh remote-docker \<<EOF
          sudo bash -c 'echo "{\"experimental\": true}" > /etc/docker/daemon.json'
          sudo systemctl restart docker
        EOF
    - run:
        <<: *gcloud_auth_enterprise
    - run:
        name: build container
        command: |-
          make -f Makefile.circle build-requirements
          make -f Makefile.circle build-enterprise VERSION=$CIRCLE_TAG
          make -f Makefile.circle push-enterprise
          make -f Makefile.circle tag-enterprise
  test:
    executor: codecov-api
    steps:
    - run:
        name: verify postgres is up
        command: |
          while ! nc -vz postgres 5432; do sleep 1; echo "waiting for postgres"; done
    - run:
        name: run tests
        command: |
          make test.unit
          # make test.integration
    - run:
        name: check for migration conflicts
        command: |
          make check-for-migration-conflicts
    - run:
        name: codecov
        command: |
          apk add git
          chmod +x codecov-alpine
          ./codecov-alpine -R . -F unit
    - run:
        name: codecov-staging
        command: |
          apk add git
          chmod +x codecov-alpine
          ./codecov-alpine -R . --url https://stage-web.codecov.dev -t $CODECOV_STAGING_TOKEN -F unit
  lint:
    executor: codecov-api
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Pylint
        command: make lint
  portable:
    executor: codecov-deploy
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          <<: *gcloud_auth
      - run: echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run: make -f Makefile.circle docker-deploy
  dive:
      executor: codecov-deploy
      steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: 20.10.7
      - run:
          <<: *gcloud_auth
      - run:
          name: Dive image
          command: |
            make -f Makefile.circle dive
  dive-enterprise:
      executor: codecov-deploy
      steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          <<: *gcloud_auth_enterprise
      - run:
          name: Dive enterprise image
          command: |
            make -f Makefile.circle dive-enterprise
            make -f Makefile.circle deep-dive
  staging:
    executor: codecov-deploy
    steps:
    - attach_workspace:
        at: .
    - setup_remote_docker:
        version: 20.10.7
    - run:
        <<: *gcloud_auth
    - run:
        name: docker build, tag, and upload to staging
        command: |
          make -f Makefile.circle staging
  production:
    executor: codecov-deploy
    steps:
    - attach_workspace:
        at: .
    - setup_remote_docker:
        version: 20.10.7
    - run:
        <<: *gcloud_auth
    - run:
        name: docker build, tag, and upload to production
        command: |
          make -f Makefile.circle production
  enterprise:
    executor: codecov-deploy
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          <<: *gcloud_auth_enterprise
      - run: echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: docker build, tag, and upload to enterprise qa
          command: |
            make -B -f Makefile.circle enterprise
  enterprise-release:
    executor: codecov-deploy
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          <<: *gcloud_auth_enterprise
      - run: echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: Release Enterprise to Dockerhub
          command: |
            make -B -f Makefile.circle release-enterprise

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - linter
      - build:
          context: "circleci google deploy context"
          filters:
            tags:
              only: /.*/
      - lint:
          context: "circleci google deploy context" 
          requires:
            - build
      - build-enterprise:
          context: "circleci google deploy context"
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only:
                - /enterprise-.*/
                - /qa-.*/
      - test:
          context: "circleci google deploy context"
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - dive:
          context: "circleci google deploy context"
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - portable:
          context:
            - "DockerHub Push Context"
            - "circleci google deploy context"
          requires:
            - build
            - test
            - lint
          filters:
            branches:
              only:
                - master
                - /portable-.*/
      - staging:
          context: "circleci google deploy context"
          requires:
            - build
            - test
            - lint
          filters:
            branches:
              only: staging
      - production:
          context: "circleci google deploy context"
          requires:
            - build
            - test
            - lint
            - dive
          filters:
            branches:
              only: master
      - dive-enterprise:
          context:
            - "circleci google deploy context"
          requires:
            - build-enterprise
          filters:
            tags:
              only:
                - /^qa-.*/
                - /^enterprise-.*/
            branches:
              only: master
      - enterprise:
          context:
            - "DockerHub Push Context"
            - "circleci google deploy context"
          requires:
            - build-enterprise
            - test
            - lint
            - dive-enterprise
          filters:
            tags:
              only:
                - /^qa-.*/
                - /^enterprise-.*/
            branches:
              only: master
      - hold:
          type: approval
          requires:
            - enterprise
          filters:
            tags:
              only:
                - /^enterprise-.*/
            branches:
              ignore: /.*/
      - enterprise-release:
          context:
            - "DockerHub Push Context"
            - "circleci google deploy context"
          requires:
            - enterprise
            - hold
          filters:
            tags:
              only: /^enterprise-.*/
            branches:
              ignore: /.*/
