type Repository {
  name: String!
  active: Boolean!
  private: Boolean!
  coverage: Float
  latestCommitAt: DateTime
  updatedAt: DateTime
  author: Owner!
  uploadToken: String
  branch(name: String): Branch
  commit(id: String!): Commit
  pull(id: Int!): Pull
  pulls(filters: PullsSetFilters, orderingDirection: OrderingDirection, first: Int, after: String, last: Int, before: String): PullConnection
  commits(filters: CommitsSetFilters, first: Int, after: String, last: Int, before: String): CommitConnection
  branches( first: Int, after: String, last: Int, before: String): BranchConnection
  defaultBranch: String
  profilingToken: String
  criticalFiles: [CriticalFile!]!
}

type PullConnection {
  edges: [PullEdge]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type PullEdge {
  cursor: String!
  node: Pull!
}

type CommitConnection {
  edges: [CommitEdge]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type CommitEdge {
  cursor: String!
  node: Commit!
}

type BranchConnection {
  edges: [BranchEdge]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type BranchEdge {
  cursor: String!
  node: Branch!
}
