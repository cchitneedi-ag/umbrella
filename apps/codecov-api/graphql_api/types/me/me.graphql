
type Me {
  email: String!
  user: User!
  owner: Owner!
  sessions(first: Int, after: String, last: Int, before: String): SessionConnection!
  viewableRepositories(filters: RepositorySetFilters, ordering: RepositoryOrdering, orderingDirection: OrderingDirection, first: Int, after: String, last: Int, before: String): ViewableRepositoryConnection!
  myOrganizations(filters: OrganizationSetFilters, first: Int, after: String, last: Int, before: String): MyOrganizationConnection!
  isSyncingWithGitProvider: Boolean!
  trackingMetadata: trackingMetadata! # temporary solution to expose the user metadata
  privateAccess: Boolean,
}

# Temporary type to gather the different attributes for tracking until we have
# a valid place in the graph for those attributes
type trackingMetadata {
  ownerid: Int!
  serviceId: String!
  plan: String
  staff: Boolean
  hasYaml: String
  service: String!
  bot: String
  delinquent: Boolean
  didTrial: Boolean
  planProvider: String
  planUserCount: Int
  createstamp: DateTime
  updatestamp: DateTime
}
