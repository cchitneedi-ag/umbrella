type Comparison {
  state: String!
  impactedFile(path: String!): ImpactedFile
  impactedFiles(filters: ImpactedFilesFilters): [ImpactedFile]!
  impactedFilesCount: Int!
  indirectChangedFilesCount: Int!
  patchTotals: CoverageTotals
  directChangedFilesCount: Int!
  changeWithParent: Float
  baseTotals: CoverageTotals
  headTotals: CoverageTotals
  fileComparisons: [FileComparison!]
  flagComparisons: [FlagComparison]
  componentComparisons: [ComponentComparison!]
  hasDifferentNumberOfHeadAndBaseReports: Boolean!
  flagComparisonsCount: Int!
}

type MissingBaseCommit implements ResolverError {
  message: String!
}

type MissingHeadCommit implements ResolverError {
  message: String!
}

type MissingComparison implements ResolverError {
  message: String!
}

type MissingBaseReport implements ResolverError {
  message: String!
}

type MissingHeadReport implements ResolverError {
  message: String!
}

union ComparisonResult =
    Comparison
  | MissingBaseCommit
  | MissingHeadCommit
  | MissingComparison
  | MissingBaseReport
  | MissingHeadReport
