type Comparison {
  state: String!
  impactedFile(path: String!): ImpactedFile
  impactedFiles(filters: ImpactedFilesFilters): [ImpactedFile]!
  patchTotals: CoverageTotals
  changeWithParent: Float
  baseTotals: CoverageTotals
  headTotals: CoverageTotals
  fileComparisons: [FileComparison!]
  flagComparisons: [FlagComparison]
  hasDifferentNumberOfHeadAndBaseReports: Boolean!
}

type InvalidComparison implements ResolverError {
  message: String!
}

type MissingComparison implements ResolverError {
  message: String!
}

type MissingBaseReport implements ResolverError {
  message: String!
}

type MissingHeadReport implements ResolverError {
  message: String!
}

union ComparisonResult = Comparison | InvalidComparison | MissingComparison | MissingBaseReport | MissingHeadReport